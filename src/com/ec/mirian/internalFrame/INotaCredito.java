/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ec.mirian.internalFrame;

import com.ec.mirian.domain.Configuracion;
import com.ec.mirian.gui.jframe.DLocker;
import com.ec.mirian.gui.jframe.VentanaPrincipal;
import com.ec.mirian.models.NotaCreditoDetalleModel;
import com.ec.mirian.service.ComprobanteService;
import com.ec.mirian.service.ConexionService;
import com.ec.mirian.service.FactoryService;
import com.ec.mirian.service.NotaCreditoService;
import com.ec.mirian.so.Linux;
import com.ec.mirian.so.Mac;
import com.ec.mirian.so.So;
import com.ec.mirian.so.Windows;
import com.ec.mirian.util.Constante;
import com.ec.mirian.util.Util;
import com.ec.mirian.util.XStreamAutorizacion;
import com.mirian.envio.EnvioAutorizar;
import com.mirian.envio.EnvioRecepcion;
import com.mirian.pdf.service.PdfFactory;
import com.mirian.pdf.service.PdfServices;
import com.mirian.validacion.exception.ValidacionException;
import com.mirian.validacion.services.ValidacionFactory;
import ec.gob.sri.comprobantes.ws.aut.RespuestaComprobante;
import ec.gob.sri.comprobantes.ws.rec.RespuestaSolicitud;
import ec.incloud.ce.bean.common.InfoTributaria;
import ec.incloud.ce.bean.common.TotalImpuesto;
import ec.incloud.ce.bean.credito.InfoNotaCredito;
import ec.incloud.ce.bean.credito.NotaCredito;
import ec.incloud.ce.bean.credito.NotaCreditoDetalle;
import ec.incloud.ce.firma.exception.FirmaException;
import ec.incloud.ce.firma.services.FirmaFactory;
import ec.incloud.ce.pdf.util.TipoDocumentoEnum;
import ec.incloud.ce.sri.services.AutorizacionException;
import ec.incloud.ce.sri.services.RecepcionException;
import ec.incloud.ce.xml.exception.XmlException;
import ec.incloud.ce.xml.services.XmlFactory;
import ec.incloud.ce.xml.services.XmlServices;
import java.io.IOException;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.text.DefaultCaret;

/**
 *
 * @author MARCELO
 */
public class INotaCredito extends javax.swing.JInternalFrame {

    /**
     * Creates new form INotaCredito
     */
    public INotaCredito() {
        initComponents();
        lblFactura.setText("Devolución");
        cargarConfiguracion();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        rbFactura = new javax.swing.JRadioButton();
        rbDevolucion = new javax.swing.JRadioButton();
        lblFactura = new javax.swing.JLabel();
        txtFactura = new javax.swing.JTextField();
        btnConfirmarDatos = new javax.swing.JButton();
        btnXml = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtRazonSocial = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtNombreComercial = new javax.swing.JTextField();
        jPanel14 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txtMatriz = new javax.swing.JTextField();
        jPanel15 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtEstablecimiento = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtPtoEmision = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtSecuencial = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtDocumento = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        lblRSComprador = new javax.swing.JLabel();
        txtRsComprador = new javax.swing.JTextField();
        lblIdComprador = new javax.swing.JLabel();
        txtIdComprador = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtMotivoTraslado = new javax.swing.JTextField();
        jPanel19 = new javax.swing.JPanel();
        txtCodDocModificado = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtNumeroDocModificado = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtTotalSinImpuesto = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtFechaEmisionDocSustento = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtValorModificado = new javax.swing.JTextField();
        jPanel20 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbDetalle = new javax.swing.JTable();
        jPanel21 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        txtSubTotal = new javax.swing.JTextField();
        jPanel23 = new javax.swing.JPanel();
        txtPorDescuento = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        txtDescuento = new javax.swing.JTextField();
        jPanel24 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        txtTotaSinImpuesto = new javax.swing.JTextField();
        jPanel25 = new javax.swing.JPanel();
        txtPorIva = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        txtIva = new javax.swing.JTextField();
        jPanel26 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        txtImporteTotal = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtRutaXml = new javax.swing.JTextField();
        btnValidar = new javax.swing.JButton();
        btnRecepcion = new javax.swing.JButton();
        btnAutorizacion = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        txtXmlAutorizado = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtPdf = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtclaveAcceso = new javax.swing.JTextField();
        lblEstado = new javax.swing.JLabel();
        txtEstado = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtFechaAutorizacion = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        edtConsola = new javax.swing.JEditorPane();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle(".::NOTA CREDITO::.");
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        jPanel10.setLayout(new javax.swing.BoxLayout(jPanel10, javax.swing.BoxLayout.LINE_AXIS));

        rbFactura.setText("Factura");
        rbFactura.setEnabled(false);
        rbFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbFacturaActionPerformed(evt);
            }
        });
        jPanel10.add(rbFactura);

        rbDevolucion.setSelected(true);
        rbDevolucion.setText("Devolución");
        rbDevolucion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbDevolucionActionPerformed(evt);
            }
        });
        jPanel10.add(rbDevolucion);

        lblFactura.setText("  Factura: ");
        jPanel10.add(lblFactura);
        jPanel10.add(txtFactura);

        btnConfirmarDatos.setText("Ver Datos");
        btnConfirmarDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarDatosActionPerformed(evt);
            }
        });
        jPanel10.add(btnConfirmarDatos);

        btnXml.setText("XML");
        btnXml.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXmlActionPerformed(evt);
            }
        });
        jPanel10.add(btnXml);

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Informarción Tributaria"));
        jPanel11.setLayout(new java.awt.GridLayout(3, 0, 0, 3));

        jPanel12.setLayout(new javax.swing.BoxLayout(jPanel12, javax.swing.BoxLayout.LINE_AXIS));

        jLabel3.setText("Razon Social:");
        jPanel12.add(jLabel3);

        txtRazonSocial.setEditable(false);
        jPanel12.add(txtRazonSocial);

        jLabel4.setText("  Nombre Comercial:");
        jPanel12.add(jLabel4);

        txtNombreComercial.setEditable(false);
        jPanel12.add(txtNombreComercial);

        jPanel11.add(jPanel12);

        jPanel14.setLayout(new javax.swing.BoxLayout(jPanel14, javax.swing.BoxLayout.LINE_AXIS));

        jLabel9.setText("Matriz:");
        jPanel14.add(jLabel9);

        txtMatriz.setEditable(false);
        jPanel14.add(txtMatriz);

        jPanel11.add(jPanel14);

        jPanel15.setLayout(new javax.swing.BoxLayout(jPanel15, javax.swing.BoxLayout.LINE_AXIS));

        jLabel6.setText("Establecimiento:");
        jPanel15.add(jLabel6);

        txtEstablecimiento.setEditable(false);
        jPanel15.add(txtEstablecimiento);

        jLabel7.setText("  Pto Emision:");
        jPanel15.add(jLabel7);

        txtPtoEmision.setEditable(false);
        jPanel15.add(txtPtoEmision);

        jLabel8.setText("  Secuencial:");
        jPanel15.add(jLabel8);

        txtSecuencial.setEditable(false);
        jPanel15.add(txtSecuencial);

        jLabel24.setText("  Identificacion:");
        jPanel15.add(jLabel24);

        txtDocumento.setEditable(false);
        txtDocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDocumentoActionPerformed(evt);
            }
        });
        jPanel15.add(txtDocumento);

        jPanel11.add(jPanel15);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder("Informacion Nota Credito"));
        jPanel16.setLayout(new java.awt.GridLayout(2, 0, 0, 3));

        jPanel18.setLayout(new javax.swing.BoxLayout(jPanel18, javax.swing.BoxLayout.LINE_AXIS));

        lblRSComprador.setText("Comprador:");
        jPanel18.add(lblRSComprador);

        txtRsComprador.setEditable(false);
        jPanel18.add(txtRsComprador);

        lblIdComprador.setText("  Doc.:");
        jPanel18.add(lblIdComprador);

        txtIdComprador.setEditable(false);
        jPanel18.add(txtIdComprador);

        jLabel15.setText("  Motivo Traslado:");
        jPanel18.add(jLabel15);

        txtMotivoTraslado.setEditable(false);
        jPanel18.add(txtMotivoTraslado);

        jPanel16.add(jPanel18);

        jPanel19.setLayout(new javax.swing.BoxLayout(jPanel19, javax.swing.BoxLayout.LINE_AXIS));

        txtCodDocModificado.setVisible(false);
        txtCodDocModificado.setEditable(false);
        jPanel19.add(txtCodDocModificado);

        jLabel17.setText("  Doc. Modificado:");
        jPanel19.add(jLabel17);

        txtNumeroDocModificado.setEditable(false);
        txtNumeroDocModificado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroDocModificadoActionPerformed(evt);
            }
        });
        jPanel19.add(txtNumeroDocModificado);

        jLabel18.setText("  Total Sin Impuesto:");
        jPanel19.add(jLabel18);

        txtTotalSinImpuesto.setEditable(false);
        jPanel19.add(txtTotalSinImpuesto);

        jLabel19.setText("  Fecha Emision Doc sustendo:");
        jPanel19.add(jLabel19);

        txtFechaEmisionDocSustento.setEditable(false);
        jPanel19.add(txtFechaEmisionDocSustento);

        jLabel2.setText("  Valor Modificado:");
        jPanel19.add(jLabel2);

        txtValorModificado.setEditable(false);
        jPanel19.add(txtValorModificado);

        jPanel16.add(jPanel19);

        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder("Detalle"));
        jPanel20.setLayout(new javax.swing.BoxLayout(jPanel20, javax.swing.BoxLayout.LINE_AXIS));

        tbDetalle.setModel(new NotaCreditoDetalleModel());
        jScrollPane3.setViewportView(tbDetalle);

        jPanel20.add(jScrollPane3);

        jPanel21.setBorder(javax.swing.BorderFactory.createTitledBorder("Totales"));
        jPanel21.setLayout(new java.awt.GridLayout(1, 0, 3, 0));

        jPanel22.setBorder(javax.swing.BorderFactory.createTitledBorder("SubTotal"));
        jPanel22.setLayout(new javax.swing.BoxLayout(jPanel22, javax.swing.BoxLayout.LINE_AXIS));

        jLabel28.setText("$ ");
        jPanel22.add(jLabel28);

        txtSubTotal.setEditable(false);
        txtSubTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel22.add(txtSubTotal);

        jPanel21.add(jPanel22);

        jPanel23.setBorder(javax.swing.BorderFactory.createTitledBorder("Descuento"));
        jPanel23.setLayout(new javax.swing.BoxLayout(jPanel23, javax.swing.BoxLayout.LINE_AXIS));

        txtPorDescuento.setEditable(false);
        txtPorDescuento.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel23.add(txtPorDescuento);

        jLabel23.setText(" % ");
        jPanel23.add(jLabel23);

        jLabel25.setText(" $ ");
        jPanel23.add(jLabel25);

        txtDescuento.setEditable(false);
        txtDescuento.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel23.add(txtDescuento);

        jPanel21.add(jPanel23);

        jPanel24.setBorder(javax.swing.BorderFactory.createTitledBorder("Total Sin Impuesto"));
        jPanel24.setLayout(new javax.swing.BoxLayout(jPanel24, javax.swing.BoxLayout.LINE_AXIS));

        jLabel26.setText("$ ");
        jPanel24.add(jLabel26);

        txtTotaSinImpuesto.setEditable(false);
        txtTotaSinImpuesto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel24.add(txtTotaSinImpuesto);

        jPanel21.add(jPanel24);

        jPanel25.setBorder(javax.swing.BorderFactory.createTitledBorder("Iva"));
        jPanel25.setLayout(new javax.swing.BoxLayout(jPanel25, javax.swing.BoxLayout.LINE_AXIS));

        txtPorIva.setEditable(false);
        txtPorIva.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel25.add(txtPorIva);

        jLabel27.setText(" % ");
        jPanel25.add(jLabel27);

        jLabel29.setText(" $ ");
        jPanel25.add(jLabel29);

        txtIva.setEditable(false);
        txtIva.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel25.add(txtIva);

        jPanel21.add(jPanel25);

        jPanel26.setBorder(javax.swing.BorderFactory.createTitledBorder("Total"));
        jPanel26.setLayout(new javax.swing.BoxLayout(jPanel26, javax.swing.BoxLayout.LINE_AXIS));

        jLabel30.setText("$ ");
        jPanel26.add(jLabel30);

        txtImporteTotal.setEditable(false);
        txtImporteTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel26.add(txtImporteTotal);

        jPanel21.add(jPanel26);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, 949, Short.MAX_VALUE)
            .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("NotaCredito", jPanel1);

        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel4.setLayout(new java.awt.GridLayout(2, 0, 0, 3));

        jPanel13.setLayout(new javax.swing.BoxLayout(jPanel13, javax.swing.BoxLayout.X_AXIS));

        jLabel1.setText(" XML: ");
        jLabel1.setAlignmentY(0.3F);
        jPanel13.add(jLabel1);

        txtRutaXml.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtRutaXml.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRutaXmlActionPerformed(evt);
            }
        });
        jPanel13.add(txtRutaXml);

        btnValidar.setText("Validar XML");
        btnValidar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValidarActionPerformed(evt);
            }
        });
        jPanel13.add(btnValidar);

        btnRecepcion.setText("Recepción");
        btnRecepcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecepcionActionPerformed(evt);
            }
        });
        jPanel13.add(btnRecepcion);

        btnAutorizacion.setText("Autorizar");
        btnAutorizacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAutorizacionActionPerformed(evt);
            }
        });
        jPanel13.add(btnAutorizacion);

        jPanel4.add(jPanel13);

        jPanel17.setLayout(new javax.swing.BoxLayout(jPanel17, javax.swing.BoxLayout.LINE_AXIS));

        jLabel20.setText("   Autorizado:  ");
        jPanel17.add(jLabel20);

        txtXmlAutorizado.setEditable(false);
        txtXmlAutorizado.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jPanel17.add(txtXmlAutorizado);

        jLabel21.setText("  PDF:  ");
        jPanel17.add(jLabel21);

        txtPdf.setEditable(false);
        txtPdf.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jPanel17.add(txtPdf);

        jPanel4.add(jPanel17);

        jPanel3.add(jPanel4, java.awt.BorderLayout.PAGE_START);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Log"));
        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanel7.setLayout(new javax.swing.BoxLayout(jPanel7, javax.swing.BoxLayout.LINE_AXIS));

        jLabel5.setText("  Clave de Acceso:  ");
        jPanel7.add(jLabel5);

        txtclaveAcceso.setEditable(false);
        jPanel7.add(txtclaveAcceso);

        lblEstado.setText("  Estado:  ");
        jPanel7.add(lblEstado);

        txtEstado.setEditable(false);
        jPanel7.add(txtEstado);

        jLabel22.setText("  Fecha Autorizacion:  ");
        jPanel7.add(jLabel22);

        txtFechaAutorizacion.setEditable(false);
        jPanel7.add(txtFechaAutorizacion);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 937, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel5.add(jPanel6, java.awt.BorderLayout.PAGE_START);

        jPanel8.setLayout(new java.awt.GridLayout(1, 0));

        edtConsola.setBorder(null);
        edtConsola.setContentType("text/html"); // NOI18N
        jScrollPane1.setViewportView(edtConsola);

        jPanel8.add(jScrollPane1);

        jPanel5.add(jPanel8, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel5, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel3);

        jTabbedPane1.addTab("Emisión", jPanel2);

        getContentPane().add(jTabbedPane1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtRutaXmlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRutaXmlActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRutaXmlActionPerformed

    private void btnValidarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValidarActionPerformed
        // TODO add your handling code here:
        final DLocker bloqueador = new DLocker();
        Thread hilo = new Thread() {
            @Override
            public void run() {
                try {
                    validarAndFirmarXML();
                } finally {
                    bloqueador.dispose();
                }
            }
        };
        hilo.start();
        bloqueador.setVisible(true);
    }//GEN-LAST:event_btnValidarActionPerformed

    private void btnRecepcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecepcionActionPerformed
        final DLocker bloqueador = new DLocker();
        Thread hilo = new Thread() {
            @Override
            public void run() {
                try {
                    recepcionSRI();
                } finally {
                    bloqueador.dispose();
                }
            }
        };
        hilo.start();
        bloqueador.setVisible(true);
    }//GEN-LAST:event_btnRecepcionActionPerformed

    private void btnAutorizacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAutorizacionActionPerformed
        // TODO add your handling code here:
        final DLocker bloqueador = new DLocker();
        Thread hilo = new Thread() {
            @Override
            public void run() {
                try {
                    autorizadoSRI();
                } finally {
                    bloqueador.dispose();
                }
            }
        };
        hilo.start();
        bloqueador.setVisible(true);
    }//GEN-LAST:event_btnAutorizacionActionPerformed

    private void txtNumeroDocModificadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroDocModificadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroDocModificadoActionPerformed

    private void txtDocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDocumentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDocumentoActionPerformed

    private void btnXmlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXmlActionPerformed
        // TODO add your handling code here:
        final DLocker bloqueador = new DLocker();
        Thread hilo = new Thread() {
            @Override
            public void run() {
                try {
                    generacionXML();
                } finally {
                    bloqueador.dispose();
                }
            }
        };
        hilo.start();
        bloqueador.setVisible(true);
    }//GEN-LAST:event_btnXmlActionPerformed

    private void btnConfirmarDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarDatosActionPerformed
        // TODO add your handling code here:
        final DLocker bloqueador = new DLocker();
        Thread hilo = new Thread() {
            @Override
            public void run() {
                try {
                    confirmarDatos();
                } finally {
                    bloqueador.dispose();
                }
            }
        };
        hilo.start();
        bloqueador.setVisible(true);
    }//GEN-LAST:event_btnConfirmarDatosActionPerformed

    private void rbDevolucionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbDevolucionActionPerformed
        // TODO add your handling code here:
        rbFactura.setSelected(false);
        rbDevolucion.setSelected(true);
        lblFactura.setText("Devolución: ");
    }//GEN-LAST:event_rbDevolucionActionPerformed

    private void rbFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbFacturaActionPerformed
        // TODO add your handling code here:
        rbFactura.setSelected(true);
        rbDevolucion.setSelected(false);
        lblFactura.setText("Factura: ");
    }//GEN-LAST:event_rbFacturaActionPerformed

    private void cargarConfiguracion() {
        config = getConfiguracion();
    }

    private Configuracion getConfiguracion() {
        ConexionService cs = FactoryService.createConexionService();
        return cs.getConfiguracionById(Constante.ID_CONFIGURACION_DEFECTO);
    }
    
    private void confirmarDatos() {
        String factura = Util.getText(txtFactura);
        if (factura != null && !factura.isEmpty()) {
            confirmarNotaCredito(factura);
        } else {
            if (rbFactura.isSelected()) {
                Util.mostrarWarning("Debe ingresar una factura");
            } else {
                Util.mostrarWarning("Debe ingresar una Devolución");
            }
        }
    }

    private void confirmarNotaCredito(String factura) {
        try {
            NotaCreditoService ncs = FactoryService.createNotaCreditoService();
            ncs.setFactura(factura);
            ncs.setDevolucion(rbDevolucion.isSelected());
            nc = ncs.getInformacion();
            completarInfoTributaria(nc.getInfoTributaria());
            completarInfoNotaCredito(nc.getInfoNotaCredito());
            completarNotaCreditoDetalle(nc.getDetalles());
        } catch (IOException | SQLException | ClassNotFoundException | ParseException ex) {
            Util.mostrarError(ex, "Error - Exception");
            Logger.getLogger(INotaCredito.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void completarInfoTributaria(InfoTributaria infoTributaria) {
        Util.setText(txtRazonSocial, infoTributaria.getRazonSocial());
        Util.setText(txtNombreComercial, infoTributaria.getRazonSocial());
        Util.setText(txtMatriz, infoTributaria.getDirMatriz());
        Util.setText(txtEstablecimiento, infoTributaria.getEstab());
        Util.setText(txtPtoEmision, infoTributaria.getPtoEmi());
        Util.setText(txtDocumento, infoTributaria.getRuc());
    }

    private void completarInfoNotaCredito(InfoNotaCredito infoNotaCredito) {
        Util.setText(txtRsComprador, infoNotaCredito.getRazonSocialComprador());
        Util.setText(txtIdComprador, infoNotaCredito.getIdentificacionComprador());
        Util.setText(txtCodDocModificado, infoNotaCredito.getCodDocModificado());
        Util.setText(txtFechaEmisionDocSustento, infoNotaCredito.getFechaEmisionDocSustento());
        Util.setText(txtTotalSinImpuesto, infoNotaCredito.getTotalSinImpuestos());
        Util.setText(txtSubTotal, infoNotaCredito.getValorModificacion());
        Util.setText(txtNumeroDocModificado, infoNotaCredito.getNumDocModificado());
        Util.setText(txtValorModificado, infoNotaCredito.getValorModificacion());
        completarTotales(infoNotaCredito.getTotalConImpuestos());
        Util.setText(txtImporteTotal, infoNotaCredito.getValorModificacion());
    }

    private void completarTotales(List<TotalImpuesto> totalConImpuestos) {

        Double desc = Util.parseDouble(Util.getText(txtSubTotal)) - Util.parseDouble(Util.getText(txtTotalSinImpuesto));
        Double porDesc = (100 * desc) / Util.parseDouble(Util.getText(txtSubTotal));

        Util.setText(txtDescuento, Util.dosDigitos(desc));
        Util.setText(txtPorDescuento, Util.dosDigitos(porDesc));

        Util.setText(txtTotaSinImpuesto, Util.getText(txtTotalSinImpuesto));

        Util.setText(txtPorIva, totalConImpuestos.get(0).getTarifa());
        Util.setText(txtIva, totalConImpuestos.get(0).getValor());
    }

    private void completarNotaCreditoDetalle(List<NotaCreditoDetalle> detalles) {
        NotaCreditoDetalleModel model = (NotaCreditoDetalleModel) tbDetalle.getModel();
        model.limpiar();
        tbDetalle.setModel(model);
        for (NotaCreditoDetalle det : detalles) {
            model.addRow(det);
        }
    }

    private void generacionXML() {
        try {
            completarCampos();
            Util.mostrarExisto("Se Genero XML con Exito");
        } catch (IOException | XmlException ex) {
            Util.mostrarError(ex, "Error: ");
            Logger.getLogger(IGuiaRemision.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void completarCampos() throws IOException, XmlException {
        ComprobanteService cs = FactoryService.createComprobanteService();
        nc.getInfoTributaria().setSecuencial(cs.getSecuencial(nc.getInfoTributaria()));
        nc.getInfoTributaria().setClaveAcceso(cs.generarClave(nc.getInfoTributaria(), nc.getInfoNotaCredito().getFechaEmision()));
        Util.setText(txtSecuencial, nc.getInfoTributaria().getSecuencial());
        Util.setText(txtclaveAcceso, nc.getInfoTributaria().getClaveAcceso());
        NotaCreditoService gs = FactoryService.createNotaCreditoService();
        Util.setText(txtRutaXml, gs.generarXML(nc));
    }

    private void validarAndFirmarXML() {
        try {
            agregarTextoAEditorConsola("<html>");
            firmarXML();
            validarXML();
        } catch (FirmaException | ValidacionException | XmlException ex) {
            agregarLog(ex.getMessage(), 3);
            Logger.getLogger(IGuiaRemision.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void agregarTextoAEditorConsola(String texto) {
        log = texto;
        edtConsola.setText(texto);
        DefaultCaret caret = (DefaultCaret) edtConsola.getCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
    }
    
    private void firmarXML() throws FirmaException {
        String xml = Util.getText(txtRutaXml);
        FirmaFactory.createFirmaServices().firma(xml,
                config.getFirma(),
                config.getClaveFirma());
        agregarLog("Se realizo la firma Electronica del XML", 1);
    }
    
    private void validarXML() throws ValidacionException, XmlException, FirmaException {
        XmlServices<NotaCredito> xmlServices = XmlFactory.getNotaCreditoXmlServices();
        NotaCredito comprobante = (NotaCredito) xmlServices.getComprobanteDePathArchivo(txtRutaXml.getText());
        ValidacionFactory.createValidacionNotaCreditoServices().validar(comprobante, config.getXsdnotacredito());
        agregarLog("XML se valido Correctamente", 1);
    }
    
    private void agregarLog(String mensaje, int i) {
        agregarTextoAEditorConsola(obtenerTextoDeEditorConsola() + Util.convierteTextoAFormatoHTML(i, mensaje));
    }
    
    private String obtenerTextoDeEditorConsola() {
        if (log.length() > 6) {
            return log.substring(0, log.length() - 7);
        } else {
            return log;
        }
    }

    private void recepcionSRI() {
        try {
            enviarARecepcion();
        } catch (RecepcionException ex) {
            agregarLog(ex.getMessage(), 3);
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void enviarARecepcion() throws RecepcionException {
        agregarLog("Enviando a Recepcion", 1);
        RespuestaSolicitud rs = EnvioRecepcion.create().enviarToRecepcion(Util.getText(txtRutaXml));
        obtenerRespuesta(rs);
    }
    
    private void obtenerRespuesta(RespuestaSolicitud rs) {
        Util.setText(txtEstado, rs.getEstado());
        if (rs.getEstado().equalsIgnoreCase(Constante.RECIBIDA)) {
            agregarLog(rs.getEstado(), 1);
            agregarLog("El Documento se envio a Recepcion", 1);
        } else {
            agregarLog(rs.getEstado(), 3);
            agregarLog(rs.getComprobantes().getComprobante().get(0).getClaveAcceso(), 3);
            agregarLog(rs.getComprobantes().getComprobante().get(0).getMensajes().getMensaje().get(0).getIdentificador(), 3);
            agregarLog(rs.getComprobantes().getComprobante().get(0).getMensajes().getMensaje().get(0).getInformacionAdicional(), 3);
            agregarLog(rs.getComprobantes().getComprobante().get(0).getMensajes().getMensaje().get(0).getMensaje(), 3);
            agregarLog(rs.getComprobantes().getComprobante().get(0).getMensajes().getMensaje().get(0).getTipo(), 3);
        }
    }
    
    private void autorizadoSRI() {
        try {
            agregarLog("Enviando a autorizacion", 1);
            RespuestaComprobante rc = EnvioAutorizar.create().enviarAutorizar(Util.getText(txtclaveAcceso));
            obtenerRespuestaComprobante(rc);
        } catch (IOException | XmlException | AutorizacionException ex) {
            agregarLog(ex.getMessage(), 3);
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            agregarLog(ex.getMessage(), 3);
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void obtenerRespuestaComprobante(RespuestaComprobante rc) throws IOException, XmlException, Exception {
        if (rc.getAutorizaciones().getAutorizacion() != null
                && !rc.getAutorizaciones().getAutorizacion().isEmpty()) {
            String estado = rc.getAutorizaciones().getAutorizacion().get(0).getEstado();
            String fechaAutorizada = rc.getAutorizaciones().getAutorizacion().get(0).getFechaAutorizacion();
            Util.setText(txtEstado, estado);
            Util.setText(txtFechaAutorizacion, fechaAutorizada);
            if (estado.equalsIgnoreCase(Constante.AUTORIZADO)) {
                agregarLog(estado, 1);
                agregarLog(fechaAutorizada, 1);
                FactoryService.createNotaCreditoService().saveInformacion(nc);
                XStreamAutorizacion.getInstance().generarXml(rc, getPthAutorizado());
                agregarLog("El Documento se envio a Autorizacion", 1);
                pathPdf();
                generarPDF(rc);
//                enviarNotificacion();
            } else {
                agregarLog(estado, 3);
                agregarLog(fechaAutorizada, 1);
                agregarLog(rc.getAutorizaciones().getAutorizacion().get(0).getMensajes().getMensaje().get(0).getIdentificador(), 3);
                agregarLog(rc.getAutorizaciones().getAutorizacion().get(0).getMensajes().getMensaje().get(0).getMensaje(), 3);
                agregarLog(rc.getAutorizaciones().getAutorizacion().get(0).getMensajes().getMensaje().get(0).getInformacionAdicional(), 3);
            }
        } else {
            Util.mostrarWarning("El Documento No ha sido Recepcionado, Por favor volver a enviar a Recepcion");
        }
    }
    
    private String getPthAutorizado() {
        String xmlAutorizado = Util.getText(txtRutaXml).replace(TipoDocumentoEnum.CREDITO.getDirectorio() + "/", TipoDocumentoEnum.CREDITO.getDirectorio() + "/AUTORIZADO/");
        Util.setText(txtXmlAutorizado, xmlAutorizado);
        return xmlAutorizado;
    }
    
    private void generarPDF(RespuestaComprobante rc) throws XmlException, Exception {
        agregarLog("Generando el PDF", 1);
        PdfServices pdfServices = PdfFactory.createPdfNotaCreditoServices();
        pdfServices.setPathIreport(JASPER_ROOT + Constante.NOTACREDITO_JASPER);
        pdfServices.setLogo(Util.getLogo());
        pdfServices.setPathInfoAdicional(Util.getPathInfoAdicional());
        XmlServices xmlServices = XmlFactory.getNotaCreditoXmlServices();
        pdfServices.generarPdf(xmlServices.getComprobanteDePathArchivo(Util.getText(txtRutaXml)),
                Util.getText(txtPdf),
                rc.getAutorizaciones().getAutorizacion().get(0).getNumeroAutorizacion(),
                rc.getAutorizaciones().getAutorizacion().get(0).getFechaAutorizacion(),
                null, null, "12");
        agregarLog("PDF generado!...", 1);
    }
    
    public void pathPdf() {
        Util.setText(txtPdf, Util.getText(txtXmlAutorizado).replace(".xml", ".pdf"));
    }
    
    private NotaCredito nc;
    private Configuracion config;
    private String log ="";
    private final String JASPER_ROOT = So.isWindows() ? Windows.JASPER_ROOT : (So.isMac() ? Mac.JASPER_ROOT : Linux.JASPER_ROOT);

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAutorizacion;
    private javax.swing.JButton btnConfirmarDatos;
    private javax.swing.JButton btnRecepcion;
    private javax.swing.JButton btnValidar;
    private javax.swing.JButton btnXml;
    private javax.swing.JEditorPane edtConsola;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblFactura;
    private javax.swing.JLabel lblIdComprador;
    private javax.swing.JLabel lblRSComprador;
    private javax.swing.JRadioButton rbDevolucion;
    private javax.swing.JRadioButton rbFactura;
    private javax.swing.JTable tbDetalle;
    private javax.swing.JTextField txtCodDocModificado;
    private javax.swing.JTextField txtDescuento;
    private javax.swing.JTextField txtDocumento;
    private javax.swing.JTextField txtEstablecimiento;
    private javax.swing.JTextField txtEstado;
    private javax.swing.JTextField txtFactura;
    private javax.swing.JTextField txtFechaAutorizacion;
    private javax.swing.JTextField txtFechaEmisionDocSustento;
    private javax.swing.JTextField txtIdComprador;
    private javax.swing.JTextField txtImporteTotal;
    private javax.swing.JTextField txtIva;
    private javax.swing.JTextField txtMatriz;
    private javax.swing.JTextField txtMotivoTraslado;
    private javax.swing.JTextField txtNombreComercial;
    private javax.swing.JTextField txtNumeroDocModificado;
    private javax.swing.JTextField txtPdf;
    private javax.swing.JTextField txtPorDescuento;
    private javax.swing.JTextField txtPorIva;
    private javax.swing.JTextField txtPtoEmision;
    private javax.swing.JTextField txtRazonSocial;
    private javax.swing.JTextField txtRsComprador;
    private javax.swing.JTextField txtRutaXml;
    private javax.swing.JTextField txtSecuencial;
    private javax.swing.JTextField txtSubTotal;
    private javax.swing.JTextField txtTotaSinImpuesto;
    private javax.swing.JTextField txtTotalSinImpuesto;
    private javax.swing.JTextField txtValorModificado;
    private javax.swing.JTextField txtXmlAutorizado;
    private javax.swing.JTextField txtclaveAcceso;
    // End of variables declaration//GEN-END:variables
}
