/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ec.mirian.gui;

import com.ec.mirian.bean.MailSetting;
import com.ec.mirian.bean.Transportista;
import com.ec.mirian.domain.Configuracion;
import com.ec.mirian.domain.VentfacCabecera;
import com.ec.mirian.enumerado.TipoDocumentoEnum;
import com.ec.mirian.models.FacturaDetalleModel;
import com.ec.mirian.models.TipoDocumentoModel;
import com.ec.mirian.models.TransportistaModel;
import com.ec.mirian.service.ConexionService;
import com.ec.mirian.service.FactoryService;
import com.ec.mirian.service.FacturaService;
import com.ec.mirian.service.TransportistaService;
import com.ec.mirian.so.Linux;
import com.ec.mirian.so.Mac;
import com.ec.mirian.so.So;
import com.ec.mirian.so.Windows;
import com.ec.mirian.util.Constante;
import com.ec.mirian.util.PropertiesMail;
import com.ec.mirian.util.PropertiesUtil;
import com.ec.mirian.util.Util;
import com.ec.mirian.util.XStreamAutorizacion;
import com.mirian.correo.notificacion.EnviarNotificacion;
import com.mirian.correo.notificacion.MailProperties;
import com.mirian.correo.notificacion.Notificacion;
import com.mirian.envio.EnvioAutorizar;
import com.mirian.envio.EnvioRecepcion;
import com.mirian.pdf.service.PdfFactory;
import com.mirian.pdf.service.PdfServices;
import com.mirian.validacion.exception.ValidacionException;
import com.mirian.validacion.services.ValidacionFactory;
import ec.gob.sri.comprobantes.ws.aut.RespuestaComprobante;
import ec.gob.sri.comprobantes.ws.rec.RespuestaSolicitud;
import ec.incloud.ce.bean.common.InfoTributaria;
import ec.incloud.ce.bean.factura.Factura;
import ec.incloud.ce.bean.factura.FacturaDetalle;
import ec.incloud.ce.bean.factura.InfoFactura;
import ec.incloud.ce.firma.exception.FirmaException;
import ec.incloud.ce.firma.services.FirmaFactory;
import ec.incloud.ce.sri.services.AutorizacionException;
import ec.incloud.ce.sri.services.RecepcionException;
import ec.incloud.ce.xml.exception.XmlException;
import ec.incloud.ce.xml.services.XmlFactory;
import ec.incloud.ce.xml.services.XmlServices;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.text.DefaultCaret;

/**
 *
 * @author MARCELO
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    FacturaDetalleModel fdModel = new FacturaDetalleModel();

    private Configuracion config;

    private Factura factura;

    private String correo;

    private static VentanaPrincipal INSTANCE = null;

    public static VentanaPrincipal getInstance() {
        return INSTANCE;
    }

    /**
     * Creates new form VentanaPrincipal2
     */
    public VentanaPrincipal() {
        initComponents();
        cargarConfiguracion();
        enableBotones(false);
        INSTANCE = this;
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        tabGenracionXML = new javax.swing.JTabbedPane();
        pnlPedido = new javax.swing.JPanel();
        pnlInputPedido = new javax.swing.JPanel();
        lblTipoDocumento = new javax.swing.JLabel();
        cmbTipoDocumento = new javax.swing.JComboBox();
        lblPedido = new javax.swing.JLabel();
        txtNumeroPedido = new javax.swing.JTextField();
        lblTransportista = new javax.swing.JLabel();
        cmbTransporte = new javax.swing.JComboBox();
        btnConfirmarDatos = new javax.swing.JButton();
        btnXml = new javax.swing.JButton();
        pnlInfoTributaria = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtRazonSocial = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtNombreComercial = new javax.swing.JTextField();
        txtDocumento = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtEstablecimiento = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtPtoEmision = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtSecuencial = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtMatriz = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblFechaEmision = new javax.swing.JLabel();
        txtFechaEmision = new javax.swing.JTextField();
        lblIdTipoComprador = new javax.swing.JLabel();
        txtTipoIdComprador = new javax.swing.JTextField();
        lblRSComprador = new javax.swing.JLabel();
        txtRsComprador = new javax.swing.JTextField();
        txtIdComprador = new javax.swing.JTextField();
        lblIdComprador = new javax.swing.JLabel();
        txtDirComprador = new javax.swing.JTextField();
        lblDirComprador = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        txtCiudadCliente = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        txtCorreoCliente = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        txtCodigoCliente = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbDetalle = new javax.swing.JTable();
        jPanel13 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        txtValor = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        txtPorDescuento = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        txtDescuento = new javax.swing.JTextField();
        jPanel15 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        txtSubTotal = new javax.swing.JTextField();
        jPanel12 = new javax.swing.JPanel();
        txtPorIva = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        txtIva = new javax.swing.JTextField();
        jPanel14 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        txtImporteTotal = new javax.swing.JTextField();
        pnlEmision = new javax.swing.JPanel();
        pnlEmisionXML = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtRutaXml = new javax.swing.JTextField();
        btnRecepcion = new javax.swing.JButton();
        btnAutorizacion = new javax.swing.JButton();
        btnValidar = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        txtXmlAutorizado = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtPdf = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtclaveAcceso = new javax.swing.JTextField();
        lblEstado = new javax.swing.JLabel();
        txtEstado = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        edtConsola = new javax.swing.JEditorPane();
        jLabel22 = new javax.swing.JLabel();
        txtFechaAutorizacion = new javax.swing.JTextField();
        pnlConfiguracion = new javax.swing.JPanel();
        pnlFirma = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtFirma = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtClave = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        txtXsdFactura = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        txtXsdNotaCredito = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        txtXsdNotaDebito = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        txtXsdGuia = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        txtXsdRetencion = new javax.swing.JTextField();
        pnlAmbiente = new javax.swing.JPanel();
        rbtProduccion = new javax.swing.JRadioButton();
        rbtDesarrollo = new javax.swing.JRadioButton();
        btnEditar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlInputPedido.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlInputPedido.setLayout(new javax.swing.BoxLayout(pnlInputPedido, javax.swing.BoxLayout.LINE_AXIS));

        lblTipoDocumento.setText("Tipo Documento:");
        pnlInputPedido.add(lblTipoDocumento);

        cmbTipoDocumento.setModel(new TipoDocumentoModel());
        cmbTipoDocumento.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        cmbTipoDocumento.setMinimumSize(new java.awt.Dimension(28, 15));
        cmbTipoDocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoDocumentoActionPerformed(evt);
            }
        });
        pnlInputPedido.add(cmbTipoDocumento);

        lblPedido.setText("Pedido:");
        pnlInputPedido.add(lblPedido);

        txtNumeroPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroPedidoActionPerformed(evt);
            }
        });
        pnlInputPedido.add(txtNumeroPedido);

        lblTransportista.setText("Transportista: ");
        pnlInputPedido.add(lblTransportista);

        pnlInputPedido.add(cmbTransporte);

        btnConfirmarDatos.setText("Ver Datos");
        btnConfirmarDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarDatosActionPerformed(evt);
            }
        });
        pnlInputPedido.add(btnConfirmarDatos);

        btnXml.setText("XML");
        btnXml.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXmlActionPerformed(evt);
            }
        });
        pnlInputPedido.add(btnXml);

        pnlInfoTributaria.setBorder(javax.swing.BorderFactory.createTitledBorder("Informaciòn Tributaria"));

        jLabel3.setText("Razon Social:");

        txtRazonSocial.setEditable(false);

        jLabel4.setText("Nombre Comercial:");

        txtNombreComercial.setEditable(false);

        txtDocumento.setEditable(false);
        txtDocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDocumentoActionPerformed(evt);
            }
        });

        jLabel6.setText("Establecimiento:");

        txtEstablecimiento.setEditable(false);

        jLabel7.setText("Pto Emision:");

        txtPtoEmision.setEditable(false);

        jLabel8.setText("Secuencial:");

        txtSecuencial.setEditable(false);

        jLabel9.setText("Matriz:");

        txtMatriz.setEditable(false);

        jLabel24.setText("Ientificacion:");

        javax.swing.GroupLayout pnlInfoTributariaLayout = new javax.swing.GroupLayout(pnlInfoTributaria);
        pnlInfoTributaria.setLayout(pnlInfoTributariaLayout);
        pnlInfoTributariaLayout.setHorizontalGroup(
            pnlInfoTributariaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInfoTributariaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInfoTributariaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInfoTributariaLayout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEstablecimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPtoEmision, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSecuencial, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlInfoTributariaLayout.createSequentialGroup()
                        .addGroup(pnlInfoTributariaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlInfoTributariaLayout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(txtMatriz))
                            .addGroup(pnlInfoTributariaLayout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtRazonSocial)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNombreComercial, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        pnlInfoTributariaLayout.setVerticalGroup(
            pnlInfoTributariaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInfoTributariaLayout.createSequentialGroup()
                .addGroup(pnlInfoTributariaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtRazonSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtNombreComercial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlInfoTributariaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtMatriz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInfoTributariaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtEstablecimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtPtoEmision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtSecuencial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Informaciòn Comprobante"));

        lblFechaEmision.setText("Fe. Emisión:");

        txtFechaEmision.setEditable(false);

        lblIdTipoComprador.setText("Tipo:");

        txtTipoIdComprador.setEditable(false);

        lblRSComprador.setText("Comprador:");

        txtRsComprador.setEditable(false);

        txtIdComprador.setEditable(false);

        lblIdComprador.setText("Doc.:");

        txtDirComprador.setEditable(false);
        txtDirComprador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDirCompradorActionPerformed(evt);
            }
        });

        lblDirComprador.setText("Dir Comprador:");

        jLabel29.setText("Ciudad:");

        txtCiudadCliente.setEditable(false);

        jLabel30.setText("Correo:");

        txtCorreoCliente.setEditable(false);

        jLabel31.setText("Codigo:");

        txtCodigoCliente.setEditable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lblRSComprador, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblFechaEmision, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(txtRsComprador, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtFechaEmision)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(lblDirComprador, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtDirComprador, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCodigoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblIdTipoComprador, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTipoIdComprador, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblIdComprador, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtIdComprador, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCiudadCliente)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtCorreoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFechaEmision)
                    .addComponent(txtFechaEmision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIdTipoComprador)
                    .addComponent(txtTipoIdComprador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIdComprador)
                    .addComponent(txtIdComprador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29)
                    .addComponent(txtCiudadCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30)
                    .addComponent(txtCorreoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRSComprador)
                    .addComponent(txtRsComprador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDirComprador)
                    .addComponent(txtDirComprador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31)
                    .addComponent(txtCodigoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Detalles"));

        tbDetalle.setModel(new FacturaDetalleModel());
        jScrollPane4.setViewportView(tbDetalle);

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder("Totales"));
        jPanel13.setLayout(new javax.swing.BoxLayout(jPanel13, javax.swing.BoxLayout.LINE_AXIS));

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder("Total"));
        jPanel16.setLayout(new javax.swing.BoxLayout(jPanel16, javax.swing.BoxLayout.LINE_AXIS));

        jLabel28.setText("$");
        jPanel16.add(jLabel28);

        txtValor.setEditable(false);
        txtValor.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel16.add(txtValor);

        jPanel13.add(jPanel16);

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Descuento"));
        jPanel11.setLayout(new javax.swing.BoxLayout(jPanel11, javax.swing.BoxLayout.LINE_AXIS));

        txtPorDescuento.setEditable(false);
        txtPorDescuento.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel11.add(txtPorDescuento);

        jLabel17.setText("%");
        jPanel11.add(jLabel17);

        jLabel25.setText("$");
        jPanel11.add(jLabel25);

        txtDescuento.setEditable(false);
        txtDescuento.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel11.add(txtDescuento);

        jPanel13.add(jPanel11);

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder("Subtotales"));
        jPanel15.setLayout(new javax.swing.BoxLayout(jPanel15, javax.swing.BoxLayout.LINE_AXIS));

        jLabel19.setText("$");
        jPanel15.add(jLabel19);

        txtSubTotal.setEditable(false);
        txtSubTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel15.add(txtSubTotal);

        jPanel13.add(jPanel15);

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder("Iva"));
        jPanel12.setLayout(new javax.swing.BoxLayout(jPanel12, javax.swing.BoxLayout.LINE_AXIS));

        txtPorIva.setEditable(false);
        txtPorIva.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel12.add(txtPorIva);

        jLabel26.setText("%");
        jPanel12.add(jLabel26);

        jLabel27.setText("$");
        jPanel12.add(jLabel27);

        txtIva.setEditable(false);
        txtIva.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel12.add(txtIva);

        jPanel13.add(jPanel12);

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder("Importe Total"));
        jPanel14.setLayout(new javax.swing.BoxLayout(jPanel14, javax.swing.BoxLayout.LINE_AXIS));

        jLabel18.setText("$");
        jPanel14.add(jLabel18);

        txtImporteTotal.setEditable(false);
        txtImporteTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel14.add(txtImporteTotal);

        jPanel13.add(jPanel14);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlPedidoLayout = new javax.swing.GroupLayout(pnlPedido);
        pnlPedido.setLayout(pnlPedidoLayout);
        pnlPedidoLayout.setHorizontalGroup(
            pnlPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlInfoTributaria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlPedidoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlInputPedido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlPedidoLayout.setVerticalGroup(
            pnlPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPedidoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlInputPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlInfoTributaria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tabGenracionXML.addTab("Pedido", pnlPedido);

        jLabel1.setText("XML:");
        jLabel1.setAlignmentY(0.3F);

        txtRutaXml.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        btnRecepcion.setText("Recepción");
        btnRecepcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecepcionActionPerformed(evt);
            }
        });

        btnAutorizacion.setText("Autorizar");
        btnAutorizacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAutorizacionActionPerformed(evt);
            }
        });

        btnValidar.setText("Validar XML");
        btnValidar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValidarActionPerformed(evt);
            }
        });

        jLabel20.setText("XML Autorizado:");

        txtXmlAutorizado.setEditable(false);
        txtXmlAutorizado.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jLabel21.setText("PDF:");

        txtPdf.setEditable(false);
        txtPdf.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        javax.swing.GroupLayout pnlEmisionXMLLayout = new javax.swing.GroupLayout(pnlEmisionXML);
        pnlEmisionXML.setLayout(pnlEmisionXMLLayout);
        pnlEmisionXMLLayout.setHorizontalGroup(
            pnlEmisionXMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEmisionXMLLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEmisionXMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlEmisionXMLLayout.createSequentialGroup()
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtXmlAutorizado))
                    .addGroup(pnlEmisionXMLLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtRutaXml, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlEmisionXMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlEmisionXMLLayout.createSequentialGroup()
                        .addGap(0, 249, Short.MAX_VALUE)
                        .addComponent(btnValidar, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRecepcion, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAutorizacion, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlEmisionXMLLayout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPdf)))
                .addContainerGap())
        );
        pnlEmisionXMLLayout.setVerticalGroup(
            pnlEmisionXMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEmisionXMLLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(pnlEmisionXMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAutorizacion)
                    .addGroup(pnlEmisionXMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtRutaXml, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnValidar)
                        .addComponent(btnRecepcion)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlEmisionXMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(txtXmlAutorizado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(txtPdf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Log"));

        jLabel5.setText("Clave de Acceso:");

        txtclaveAcceso.setEditable(false);

        lblEstado.setText("Estado:");

        txtEstado.setEditable(false);

        edtConsola.setBorder(null);
        edtConsola.setContentType("text/html"); // NOI18N
        jScrollPane2.setViewportView(edtConsola);

        jLabel22.setText("Fecha Autorizacion:");

        txtFechaAutorizacion.setEditable(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtclaveAcceso, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                    .addComponent(txtFechaAutorizacion))
                .addGap(18, 18, 18)
                .addComponent(lblEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtclaveAcceso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEstado)
                    .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(txtFechaAutorizacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlEmisionLayout = new javax.swing.GroupLayout(pnlEmision);
        pnlEmision.setLayout(pnlEmisionLayout);
        pnlEmisionLayout.setHorizontalGroup(
            pnlEmisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlEmisionXML, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlEmisionLayout.setVerticalGroup(
            pnlEmisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEmisionLayout.createSequentialGroup()
                .addComponent(pnlEmisionXML, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabGenracionXML.addTab("Emisión", pnlEmision);

        pnlFirma.setBorder(javax.swing.BorderFactory.createTitledBorder("Firma Electronica"));

        jLabel10.setText("Ruta Firma:");

        txtFirma.setEditable(false);
        txtFirma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFirmaActionPerformed(evt);
            }
        });

        jLabel16.setText("Clave:");

        txtClave.setEditable(false);

        javax.swing.GroupLayout pnlFirmaLayout = new javax.swing.GroupLayout(pnlFirma);
        pnlFirma.setLayout(pnlFirmaLayout);
        pnlFirmaLayout.setHorizontalGroup(
            pnlFirmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFirmaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtFirma)
                .addGap(18, 18, 18)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        pnlFirmaLayout.setVerticalGroup(
            pnlFirmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFirmaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlFirmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtFirma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Archivos XSD"));

        jLabel11.setText("Factura: ");

        txtXsdFactura.setEditable(false);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtXsdFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 772, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtXsdFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel12.setText("Nota Credito: ");

        txtXsdNotaCredito.setEditable(false);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtXsdNotaCredito, javax.swing.GroupLayout.PREFERRED_SIZE, 760, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtXsdNotaCredito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel13.setText("Nota Debito: ");

        txtXsdNotaDebito.setEditable(false);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtXsdNotaDebito, javax.swing.GroupLayout.PREFERRED_SIZE, 760, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtXsdNotaDebito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel14.setText("Guia Remision:");

        txtXsdGuia.setEditable(false);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtXsdGuia, javax.swing.GroupLayout.PREFERRED_SIZE, 760, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtXsdGuia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel15.setText("Retención:");

        txtXsdRetencion.setEditable(false);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtXsdRetencion, javax.swing.GroupLayout.PREFERRED_SIZE, 768, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtXsdRetencion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75))
        );

        pnlAmbiente.setBorder(javax.swing.BorderFactory.createTitledBorder("Ambiente"));

        rbtProduccion.setText("Producción");
        rbtProduccion.setEnabled(false);
        rbtProduccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtProduccionActionPerformed(evt);
            }
        });

        rbtDesarrollo.setSelected(true);
        rbtDesarrollo.setText("Desarrollo");
        rbtDesarrollo.setEnabled(false);
        rbtDesarrollo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtDesarrolloActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAmbienteLayout = new javax.swing.GroupLayout(pnlAmbiente);
        pnlAmbiente.setLayout(pnlAmbienteLayout);
        pnlAmbienteLayout.setHorizontalGroup(
            pnlAmbienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAmbienteLayout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(rbtProduccion, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(93, 93, 93)
                .addComponent(rbtDesarrollo, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlAmbienteLayout.setVerticalGroup(
            pnlAmbienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAmbienteLayout.createSequentialGroup()
                .addGroup(pnlAmbienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtProduccion, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbtDesarrollo))
                .addGap(0, 5, Short.MAX_VALUE))
        );

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlConfiguracionLayout = new javax.swing.GroupLayout(pnlConfiguracion);
        pnlConfiguracion.setLayout(pnlConfiguracionLayout);
        pnlConfiguracionLayout.setHorizontalGroup(
            pnlConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConfiguracionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlFirma, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlAmbiente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(pnlConfiguracionLayout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlConfiguracionLayout.setVerticalGroup(
            pnlConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConfiguracionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlFirma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlAmbiente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditar)
                    .addComponent(btnGuardar)
                    .addComponent(btnCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabGenracionXML.addTab("Configuración", pnlConfiguracion);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabGenracionXML)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabGenracionXML)
        );

        tabGenracionXML.getAccessibleContext().setAccessibleName("tabPedido");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNumeroPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroPedidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroPedidoActionPerformed

    private void btnConfirmarDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarDatosActionPerformed
        // TODO add your handling code here:
        final DLocker bloqueador = new DLocker();
        Thread hilo = new Thread() {
            @Override
            public void run() {
                try {
                    confirmarDatos();
                } finally {
                    bloqueador.dispose();
                }
            }
        };
        hilo.start();
        bloqueador.setVisible(true);
    }//GEN-LAST:event_btnConfirmarDatosActionPerformed

    private void btnXmlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXmlActionPerformed
        // TODO add your handling code here:
        final DLocker bloqueador = new DLocker();
        Thread hilo = new Thread() {
            @Override
            public void run() {
                try {
                    generacionXML();
                } finally {
                    bloqueador.dispose();
                }
            }
        };
        hilo.start();
        bloqueador.setVisible(true);
    }//GEN-LAST:event_btnXmlActionPerformed

    private void txtDirCompradorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDirCompradorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDirCompradorActionPerformed

    private void txtFirmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFirmaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirmaActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        setEditableTxt(true);
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        setEditableTxt(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void rbtProduccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtProduccionActionPerformed
        // TODO add your handling code here:
        rbtDesarrollo.setSelected(false);
        rbtProduccion.setSelected(true);
    }//GEN-LAST:event_rbtProduccionActionPerformed

    private void rbtDesarrolloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtDesarrolloActionPerformed
        // TODO add your handling code here:
        rbtDesarrollo.setSelected(true);
        rbtProduccion.setSelected(false);
    }//GEN-LAST:event_rbtDesarrolloActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        final DLocker bloqueador = new DLocker();
        Thread hilo = new Thread() {
            @Override
            public void run() {
                try {
                    actualizarConfiguracion();
                } finally {
                    bloqueador.dispose();
                }
            }
        };
        hilo.start();
        bloqueador.setVisible(true);
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnRecepcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecepcionActionPerformed
        final DLocker bloqueador = new DLocker();
        Thread hilo = new Thread() {
            @Override
            public void run() {
                try {
                    recepcionSRI();
                } finally {
                    bloqueador.dispose();
                }
            }
        };
        hilo.start();
        bloqueador.setVisible(true);
    }//GEN-LAST:event_btnRecepcionActionPerformed

    private void btnAutorizacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAutorizacionActionPerformed
        // TODO add your handling code here:
        final DLocker bloqueador = new DLocker();
        Thread hilo = new Thread() {
            @Override
            public void run() {
                try {
                    autorizadoSRI();
                } finally {
                    bloqueador.dispose();
                }
            }
        };
        hilo.start();
        bloqueador.setVisible(true);
    }//GEN-LAST:event_btnAutorizacionActionPerformed

    private void btnValidarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValidarActionPerformed
        // TODO add your handling code here:
        final DLocker bloqueador = new DLocker();
        Thread hilo = new Thread() {
            @Override
            public void run() {
                try {
                    validarAndFirmarXML();
                } finally {
                    bloqueador.dispose();
                }
            }
        };
        hilo.start();
        bloqueador.setVisible(true);
    }//GEN-LAST:event_btnValidarActionPerformed

    private void txtDocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDocumentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDocumentoActionPerformed

    private void cmbTipoDocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoDocumentoActionPerformed
        // TODO add your handling code here:
        final DLocker bloqueador = new DLocker();
        Thread hilo = new Thread() {
            public void run() {
                try {
                    cargarTransportista();
                } finally {
                    bloqueador.dispose();
                }
            }
        };
        hilo.start();
        bloqueador.setVisible(true);
    }//GEN-LAST:event_cmbTipoDocumentoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    private void confirmarDatos() {
        TipoDocumentoEnum td = (TipoDocumentoEnum) cmbTipoDocumento.getSelectedItem();
        String numeroPedido = txtNumeroPedido.getText();
        if (numeroPedido != null && !numeroPedido.isEmpty() && td != null) {
            try {
                if (td.isFactura()) {
                    confirmarFactura(numeroPedido);
                } else if(td.isGuia()) {
                    confirmarGuia(numeroPedido);
                } else if(td.isCredito()) {
                    confirmarNotaCredito(numeroPedido);
                }
            } catch (SQLException ex) {
                btnXml.setEnabled(false);
                Util.mostrarError(ex, "Error1 SQL Exception");
            } catch (IOException ex) {
                btnXml.setEnabled(false);
                Util.mostrarError(ex, "Error2 IOException");
            } catch (XmlException ex) {
                btnXml.setEnabled(false);
                Util.mostrarError(ex, "Error3 XmlException");
            } catch (ClassNotFoundException ex) {
                btnXml.setEnabled(false);
                Util.mostrarError(ex, "Error4 ClassNotFoundException");
            }
        } else {
            Util.mostrarWarning("Debe ingresar el numero de pedido y Tipo de Documento");
        }
    }

    public void generacionXML() {
        TipoDocumentoEnum td = (TipoDocumentoEnum) cmbTipoDocumento.getSelectedItem();
        String numeroPedido = txtNumeroPedido.getText();
        if (numeroPedido != null && !numeroPedido.isEmpty() && td != null) {
            ConexionService cs = new ConexionService();
            VentfacCabecera cab = cs.getVentaCabecera(numeroPedido);
            if (cab == null) {
                if (td.isFactura()) {
                    try {
                        if (emitirAsiMismo() == 0) {
                            enableBotones(true);
                            FacturaService gf = new FacturaService();
                            gf.setNumVentCred(numeroPedido);

                            String xml = gf.generarFacturaXML();
                            //gf.saveInformacion();//habilitar esta opcion
                            setText(txtRutaXml, xml);
                            Util.mostrarExisto("Se Genero XMl con Exito");
                        } else {
                            enableBotones(false);
                        }
                    } catch (SQLException ex) {
                        Util.mostrarError(ex, "Error1 SQL Exception");
                    } catch (IOException ex) {
                        Util.mostrarError(ex, "Error2 IOException");
                    } catch (XmlException ex) {
                        Util.mostrarError(ex, "Error3 XmlException");
                    } catch (ClassNotFoundException ex) {
                        Util.mostrarError(ex, "Error4 ClassNotFoundException");
                    }
                }
            } else {
                setText(txtRutaXml, cab.getXml());
                setText(txtXmlAutorizado, cab.getXmlAutorizado());
                setText(txtPdf, cab.getPdf());
                setText(txtclaveAcceso, cab.getClaveAcceso());
                Util.mostrarWarning("Ya se genero El XML para Este documento");
            }
        }
    }

    private void setEditableTxt(boolean b) {
        txtXsdFactura.setEditable(b);
        txtFirma.setEditable(b);
        txtXsdNotaCredito.setEditable(b);
        txtXsdNotaDebito.setEditable(b);
        txtXsdGuia.setEditable(b);
        txtXsdRetencion.setEditable(b);
        txtClave.setEditable(b);

        rbtDesarrollo.setEnabled(b);
        rbtProduccion.setEnabled(b);
    }

    private Configuracion getConfiguracion() {
        ConexionService cs = FactoryService.createConexionService();
        return cs.getConfiguracionById(Constante.ID_CONFIGURACION_DEFECTO);
    }

    private void cargarConfiguracion() {
        config = getConfiguracion();
        setTextConfiguracion(config);
        if (config.getAmbiente() == 1) {
            rbtDesarrollo.setSelected(true);
            rbtProduccion.setSelected(false);
        } else {
            rbtProduccion.setSelected(true);
            rbtDesarrollo.setSelected(false);
        }
    }

    private void actualizarConfiguracion() {
        ConexionService cs = FactoryService.createConexionService();
        config.setFirma(getText(txtFirma));
        config.setXsdfactura(getText(txtXsdFactura));
        config.setXsdnotacredito(getText(txtXsdNotaCredito));
        config.setXsdnotadebito(getText(txtXsdNotaDebito));
        config.setXsdguia(getText(txtXsdGuia));
        config.setXsdretencion(getText(txtXsdRetencion));
        config.setClaveFirma(getText(txtClave));
        config.setAmbiente(getAmbiente());
        cs.actualizaConfiguracion(config);
        Util.mostrarExisto("Se Actualizo Correctamente!!!");
    }

    private void setTextConfiguracion(Configuracion config) {
        setText(txtFirma, config.getFirma());
        setText(txtXsdFactura, config.getXsdfactura());
        setText(txtXsdNotaCredito, config.getXsdnotacredito());
        setText(txtXsdNotaDebito, config.getXsdnotadebito());
        setText(txtXsdGuia, config.getXsdguia());
        setText(txtXsdRetencion, config.getXsdretencion());
        setText(txtClave, config.getClaveFirma());
    }

    private void cargarTransportista() {
        try {
            TipoDocumentoEnum td = (TipoDocumentoEnum) cmbTipoDocumento.getSelectedItem();
            if (td.isGuia()) {
                TransportistaService ts = TransportistaService.create();
                List<Transportista> transportistas = ts.getTransportistas();
                TransportistaModel tm = new TransportistaModel();
                tm.setTranspostistas(transportistas);
                cmbTransporte.setModel(tm);
            } else {
                ComboBoxModel tm = cmbTransporte.getModel();
                if (tm.getClass() == TransportistaModel.class) {
                    ((TransportistaModel) tm).remove();
                }
                cmbTransporte.setModel(tm);
                cmbTransporte.removeAllItems();
            }
            cmbTransporte.updateUI();
        } catch (SQLException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setText(javax.swing.JTextField field, String texto) {
        field.setText(texto);
    }

    private String getText(javax.swing.JTextField field) {
        return field.getText();
    }

    private Integer getAmbiente() {
        return rbtDesarrollo.isSelected() ? 1 : 2;
    }

    private void firmarXML() throws FirmaException {
        String xml = getText(txtRutaXml);
        FirmaFactory.createFirmaServices().firma(xml,
                config.getFirma(),
                config.getClaveFirma());
        agregarLog("Se realizo la firma Electronica del XML", 1);
    }

    public void agregarTextoAEditorConsola(String texto) {
        log = texto;
        edtConsola.setText(log);
        DefaultCaret caret = (DefaultCaret) edtConsola.getCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
    }
    public String log = "";

    public String obtenerTextoDeEditorConsola() {
        if (log.length() > 6) {
            return log.substring(0, log.length() - 7);
        } else {
            return log;
        }
    }

    private void agregarLog(String mensaje, int i) {
        agregarTextoAEditorConsola(obtenerTextoDeEditorConsola() + Util.convierteTextoAFormatoHTML(i, mensaje));
    }

    private void validarXML() throws ValidacionException, XmlException, FirmaException {
        XmlServices<Factura> xmlServices = XmlFactory.getFacturaXmlServices();
        Factura comprobante = (Factura) xmlServices.getComprobanteDePathArchivo(txtRutaXml.getText());
        ValidacionFactory.createValidacionFacturaServices().validar(comprobante, config.getXsdfactura());
        agregarLog("XML se valido Correctamente", 1);
    }

    public void validarAndFirmarXML() {
        try {
            agregarTextoAEditorConsola("<html>");
            firmarXML();
            validarXML();
        } catch (FirmaException | ValidacionException | XmlException ex) {
            agregarLog(ex.getMessage(), 3);
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void recepcionSRI() {
        try {
            enviarARecepcion();
        } catch (RecepcionException ex) {
            agregarLog(ex.getMessage(), 3);
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void enviarARecepcion() throws RecepcionException {
        agregarLog("Enviando a Recepcion", 1);
        RespuestaSolicitud rs = EnvioRecepcion.create().enviarToRecepcion(getText(txtRutaXml));
        obtenerRespuesta(rs);
    }

    public void obtenerRespuesta(RespuestaSolicitud rs) {
        setText(txtEstado, rs.getEstado());
        if (rs.getEstado().equalsIgnoreCase(Constante.RECIBIDA)) {
            agregarLog(rs.getEstado(), 1);
            agregarLog("El Documento se envio a Recepcion", 1);
        } else {
            agregarLog(rs.getEstado(), 3);
            agregarLog(rs.getComprobantes().getComprobante().get(0).getClaveAcceso(), 3);
            agregarLog(rs.getComprobantes().getComprobante().get(0).getMensajes().getMensaje().get(0).getIdentificador(), 3);
            agregarLog(rs.getComprobantes().getComprobante().get(0).getMensajes().getMensaje().get(0).getInformacionAdicional(), 3);
            agregarLog(rs.getComprobantes().getComprobante().get(0).getMensajes().getMensaje().get(0).getMensaje(), 3);
            agregarLog(rs.getComprobantes().getComprobante().get(0).getMensajes().getMensaje().get(0).getTipo(), 3);
        }
    }

    private void autorizadoSRI() {
        try {
            agregarLog("Enviando a autorizacion", 1);
            RespuestaComprobante rc = EnvioAutorizar.create().enviarAutorizar(getText(txtclaveAcceso));
            obtenerRespuestaComprobante(rc);
        } catch (IOException | XmlException | AutorizacionException ex) {
            agregarLog(ex.getMessage(), 3);
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            agregarLog(ex.getMessage(), 3);
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void obtenerRespuestaComprobante(RespuestaComprobante rc) throws IOException, XmlException, Exception {
        if (rc.getAutorizaciones().getAutorizacion() != null
                && !rc.getAutorizaciones().getAutorizacion().isEmpty()) {
            String estado = rc.getAutorizaciones().getAutorizacion().get(0).getEstado();
            String fechaAutorizada = rc.getAutorizaciones().getAutorizacion().get(0).getFechaAutorizacion();
            setText(txtEstado, estado);
            setText(txtFechaAutorizacion, fechaAutorizada);
            if (estado.equalsIgnoreCase(Constante.AUTORIZADO)) {
                agregarLog(estado, 1);
                agregarLog(fechaAutorizada, 1);
                XStreamAutorizacion.getInstance().generarXml(rc, getPthAutorizado());
                agregarLog("El Documento se envio a Autorizacion", 1);
                pathPdf();
                FacturaService gf = new FacturaService();
                gf.setNumVentCred(getText(txtNumeroPedido));
                gf.saveInformacion();//habilitar esta opcion
                generarPDF(rc);
                enviarNotificacion();
            } else {
                agregarLog(estado, 3);
                agregarLog(fechaAutorizada, 1);
                agregarLog(rc.getAutorizaciones().getAutorizacion().get(0).getMensajes().getMensaje().get(0).getIdentificador(), 3);
                agregarLog(rc.getAutorizaciones().getAutorizacion().get(0).getMensajes().getMensaje().get(0).getMensaje(), 3);
                agregarLog(rc.getAutorizaciones().getAutorizacion().get(0).getMensajes().getMensaje().get(0).getInformacionAdicional(), 3);
            }
        } else {
            Util.mostrarWarning("El Documento No ha sido Recepcionado, Por favor volver a enviar a Recepcion");
        }
    }

    public String getPthAutorizado() {
        TipoDocumentoEnum td = (TipoDocumentoEnum) cmbTipoDocumento.getSelectedItem();
        String xmlAutorizado = getText(txtRutaXml).replace(td.getDirectorio() + "/", td.getDirectorio() + "/AUTORIZADO/");
        setText(txtXmlAutorizado, xmlAutorizado);
        return xmlAutorizado;
    }

    public void generarPDF(RespuestaComprobante rc) throws XmlException, Exception {
        agregarLog("Generando el PDF", 1);
        PdfServices pdfServices = getPdfService();
        pdfServices.setPathIreport(getPathJasper());
        pdfServices.setLogo(Util.getLogo());
        pdfServices.setPathInfoAdicional(Util.getPathInfoAdicional());
        XmlServices xmlServices = getXmlService();
        pdfServices.generarPdf(xmlServices.getComprobanteDePathArchivo(getText(txtRutaXml)),
                getText(txtPdf),
                rc.getAutorizaciones().getAutorizacion().get(0).getNumeroAutorizacion(),
                rc.getAutorizaciones().getAutorizacion().get(0).getFechaAutorizacion(),
                null, null, "12");
        agregarLog("PDF generado!...", 1);
    }

    public PdfServices getPdfService() {
        TipoDocumentoEnum td = (TipoDocumentoEnum) cmbTipoDocumento.getSelectedItem();
        switch (td.getCodigo()) {
            case "01":
                return PdfFactory.createPdfFacturaServices();
            case "04":
                return PdfFactory.createPdfNotaCreditoServices();
            case "05":
                return PdfFactory.createPdfNotaDebitoServices();
            case "06":
                return PdfFactory.createPdfGuiaRemisionServices();
            case "07":
                return PdfFactory.createPdfComprobanteRetencionServices();
            default:
                return null;
        }
    }

    public XmlServices getXmlService() {
        TipoDocumentoEnum td = (TipoDocumentoEnum) cmbTipoDocumento.getSelectedItem();
        switch (td.getCodigo()) {
            case "01":
                return XmlFactory.getFacturaXmlServices();
            case "04":
                return XmlFactory.getNotaCreditoXmlServices();
            case "05":
                return XmlFactory.getNotaDebitoXmlServices();
            case "06":
                return XmlFactory.getGuiaRemisionXmlServices();
            case "07":
                return XmlFactory.getRetencionServices();
            default:
                return null;
        }
    }

    public String getPathJasper() {
        TipoDocumentoEnum td = (TipoDocumentoEnum) cmbTipoDocumento.getSelectedItem();
        String root = So.isWindows() ? Windows.JASPER_ROOT : (So.isMac() ? Mac.JASPER_ROOT : Linux.JASPER_ROOT);
        switch (td.getCodigo()) {
            case "01":
                return root + Constante.FACTURA_JASPER;
            case "04":
                return root + Constante.NOTACREDITO_JASPER;
            case "05":
                return root + Constante.NOTADEBITO_JASPER;
            case "06":
                return root + Constante.GUIA_JASPER;
            case "07":
                return root + Constante.RETENCION_JASPER;
            default:
                return null;
        }
    }

    public void enviarNotificacion() throws IOException {
        agregarLog("Enviando Correo ...", 1);
        List<String> adjunto = new ArrayList<>();
        adjunto.add(getText(txtXmlAutorizado));
        adjunto.add(getText(txtPdf));

        Notificacion notificacion = EnviarNotificacion.AUTORIZADO_CONFIRMACION;

        TipoDocumentoEnum td = (TipoDocumentoEnum) cmbTipoDocumento.getSelectedItem();

        String sriCorrelativo = getText(txtEstablecimiento) + "-" + getText(txtPtoEmision) + "-" + getText(txtSecuencial);

        String root = So.isWindows() ? Windows.NOTIFICACION_ROOT : (So.isMac() ? Mac.NOTIFICACION_ROOT : Linux.NOTIFICACION_ROOT);

        notificacion.enviarCorreo(getMailProperties(getMailSetting()),
                td.getDescripcion(),
                sriCorrelativo,
                getText(txtNumeroPedido),
                config.getAmbiente() == 2 ? correo : "mmoyanol1180@gmail.com",
                "mmoyanol1180@gmail.com", root + Constante.AUTORIZADO_COMFIRMACION, adjunto);
        agregarLog("Correo Enviado", 1);
    }

    public MailSetting getMailSetting() throws UnsupportedEncodingException, IOException {
        MailSetting ms = new MailSetting();
        PropertiesMail.getInstanceProperties();
        ms.setHost(PropertiesMail.getValorAcceso("mail.smtp.host"));
        ms.setPassword(PropertiesMail.getValorAcceso("mail.smtp.password"));
        ms.setPort(PropertiesMail.getValorAcceso("mail.smtp.port"));
        ms.setUser(PropertiesMail.getValorAcceso("mail.smtp.user"));
        return ms;
    }

    private MailProperties getMailProperties(final MailSetting ms) {
        return new MailProperties() {

            @Override
            public String getHost() {
                return ms.getHost();
            }

            @Override
            public String getPort() {
                return ms.getPort();
            }

            @Override
            public String getUsuario() {
                return ms.getUser();
            }

            @Override
            public String getPassword() {
                return ms.getPassword();
            }
        };
    }

    private int emitirAsiMismo() throws UnsupportedEncodingException, IOException {
        PropertiesUtil.getInstanceProperties();
        String idEmisor = PropertiesUtil.getValorPathXML("mirian.emisor.id");
        if (getText(txtDescuento).equals("0.00") && getText(txtCodigoCliente).equalsIgnoreCase(idEmisor)) {
            int respuesta = Util.mensajeConfirmacion();//si = 0, no = 1
            return respuesta;
        } else {
            return 0;
        }
    }

    public String getCodigoTipoDocumento() {
        TipoDocumentoEnum td = (TipoDocumentoEnum) cmbTipoDocumento.getSelectedItem();
        return td.getCodigo();
    }

    public String getClaveAcceso() {
        return getText(txtclaveAcceso);
    }

    public String getXml() {
        return getText(txtRutaXml);
    }

    public String getXmlAutorizado() {
        return getText(txtXmlAutorizado);
    }

    public void setDescuento(String porcentajeDesc) {
        setText(txtDescuento, porcentajeDesc);
    }

    public void setPorDescuento(String porcentajeDesc) {
        setText(txtPorDescuento, porcentajeDesc);
    }

    public String getPorDescuento() {
        return getText(txtPorDescuento);
    }

    public void setSecuencial(String secuencial) {
        setText(txtSecuencial, secuencial);
    }

    public String getSecuencial() {
        return getText(txtSecuencial);
    }

    public void setClaveAcceso(String claveAcceso) {
        setText(txtclaveAcceso, claveAcceso);
    }

    public void pathPdf() {
        setText(txtPdf, getText(txtXmlAutorizado).replace(".xml", ".pdf"));
    }

    public String getPdf() {
        return getText(txtPdf);
    }

    public void setValor(String valor) {
        setText(txtValor, valor);
    }

    public String getSubTotal() {
        return getText(txtSubTotal);
    }

    public void setTxtCiudadCliente(String ciudad) {
        setText(txtCiudadCliente, ciudad);
    }

    public String getTxtCiudadCliente() {
        return getText(txtCiudadCliente);
    }

    public void setTxtCorreoCliente(String correo) {
        setText(txtCorreoCliente, correo);
    }

    public String getTxtCorreoCliente() {
        return getText(txtCorreoCliente);
    }

    public void setCodigoCliente(String codigoCliente) {
        setText(txtCodigoCliente, codigoCliente);
    }

    public String getCodigoCliente() {
        return getText(txtCodigoCliente);
    }

    public String getEstabl() {
        return getText(txtEstablecimiento);
    }

    public String getPtoEmision() {
        return getText(txtPtoEmision);
    }
    
    public String getCorreo() {
        return correo;
    }

    public void setCorreo(String correo) {
        this.correo = correo;
    }

    private void enableBotones(boolean flag) {
        Util.enableButton(btnXml, flag);
        Util.enableButton(btnAutorizacion, flag);
        Util.enableButton(btnRecepcion, flag);
        Util.enableButton(btnValidar, flag);
    }

    private void confirmarFactura(String numeroPedido) throws SQLException, IOException, XmlException, ClassNotFoundException {
        FacturaService gf = FactoryService.createFacturaService();
        gf.setNumVentCred(numeroPedido);
        factura = gf.obtenerInformacion();
        InfoTributaria it = factura.getInfoTributaria();
        txtRazonSocial.setText(it.getRazonSocial());
        txtNombreComercial.setText(it.getNombreComercial());
        txtDocumento.setText(it.getRuc());
        txtEstablecimiento.setText(it.getEstab());
        txtPtoEmision.setText(it.getPtoEmi());
        txtSecuencial.setText(it.getSecuencial());
        txtMatriz.setText(it.getDirMatriz());

        InfoFactura ifa = factura.getInfoFactura();
        txtFechaEmision.setText(ifa.getFechaEmision());
        txtTipoIdComprador.setText(ifa.getTipoIdentificacionComprador());
        txtRsComprador.setText(ifa.getRazonSocialComprador());
        txtIdComprador.setText(ifa.getIdentificacionComprador());
        txtDirComprador.setText(ifa.getDireccionComprador());
        txtDescuento.setText(ifa.getTotalDescuento());
        setText(txtValor, ifa.getTotalSinImpuestos());
        setText(txtPorIva, ifa.getTotalConImpuestos().get(0).getTarifa());
        Double sub = Double.parseDouble(getText(txtValor)) - Double.parseDouble(getText(txtDescuento));
        setText(txtSubTotal, Util.dosDigitos(sub));
        setText(txtIva, ifa.getTotalConImpuestos().get(0).getValor());
        txtImporteTotal.setText(ifa.getImporteTotal());

        List<FacturaDetalle> detalles = factura.getDetalles();
        fdModel.limpiar();
        tbDetalle.setModel(fdModel);
        for (FacturaDetalle fd : detalles) {
            fdModel.addRowFacturaDetalleModel(fd);
        }
        tbDetalle.updateUI();
        btnXml.setEnabled(true);
    }
    
    private void confirmarGuia(String numeroPedido) throws SQLException, IOException, XmlException, ClassNotFoundException {
        FacturaService gf = FactoryService.createFacturaService();
        gf.setNumVentCred(numeroPedido);
        factura = gf.obtenerInformacion();
        InfoTributaria it = factura.getInfoTributaria();
        txtRazonSocial.setText(it.getRazonSocial());
        txtNombreComercial.setText(it.getNombreComercial());
        txtDocumento.setText(it.getRuc());
        txtEstablecimiento.setText(it.getEstab());
        txtPtoEmision.setText(it.getPtoEmi());
        txtSecuencial.setText(it.getSecuencial());
        txtMatriz.setText(it.getDirMatriz());

        InfoFactura ifa = factura.getInfoFactura();
        txtFechaEmision.setText(ifa.getFechaEmision());
        txtTipoIdComprador.setText(ifa.getTipoIdentificacionComprador());
        txtRsComprador.setText(ifa.getRazonSocialComprador());
        txtIdComprador.setText(ifa.getIdentificacionComprador());
        txtDirComprador.setText(ifa.getDireccionComprador());
        txtDescuento.setText(ifa.getTotalDescuento());
        setText(txtValor, ifa.getTotalSinImpuestos());
        setText(txtPorIva, ifa.getTotalConImpuestos().get(0).getTarifa());
        Double sub = Double.parseDouble(getText(txtValor)) - Double.parseDouble(getText(txtDescuento));
        setText(txtSubTotal, Util.dosDigitos(sub));
        setText(txtIva, ifa.getTotalConImpuestos().get(0).getValor());
        txtImporteTotal.setText(ifa.getImporteTotal());

        List<FacturaDetalle> detalles = factura.getDetalles();
        fdModel.limpiar();
        tbDetalle.setModel(fdModel);
        for (FacturaDetalle fd : detalles) {
            fdModel.addRowFacturaDetalleModel(fd);
        }
        tbDetalle.updateUI();
        btnXml.setEnabled(true);
    }
    
    public void confirmarNotaCredito(String numeroPedido) {
        
        System.out.println("hola Nota de Credito!!");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAutorizacion;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnConfirmarDatos;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnRecepcion;
    private javax.swing.JButton btnValidar;
    private javax.swing.JButton btnXml;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cmbTipoDocumento;
    private javax.swing.JComboBox cmbTransporte;
    private javax.swing.JEditorPane edtConsola;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblDirComprador;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblFechaEmision;
    private javax.swing.JLabel lblIdComprador;
    private javax.swing.JLabel lblIdTipoComprador;
    private javax.swing.JLabel lblPedido;
    private javax.swing.JLabel lblRSComprador;
    private javax.swing.JLabel lblTipoDocumento;
    private javax.swing.JLabel lblTransportista;
    private javax.swing.JPanel pnlAmbiente;
    private javax.swing.JPanel pnlConfiguracion;
    private javax.swing.JPanel pnlEmision;
    private javax.swing.JPanel pnlEmisionXML;
    private javax.swing.JPanel pnlFirma;
    private javax.swing.JPanel pnlInfoTributaria;
    private javax.swing.JPanel pnlInputPedido;
    private javax.swing.JPanel pnlPedido;
    private javax.swing.JRadioButton rbtDesarrollo;
    private javax.swing.JRadioButton rbtProduccion;
    private javax.swing.JTabbedPane tabGenracionXML;
    private javax.swing.JTable tbDetalle;
    private javax.swing.JTextField txtCiudadCliente;
    private javax.swing.JTextField txtClave;
    private javax.swing.JTextField txtCodigoCliente;
    private javax.swing.JTextField txtCorreoCliente;
    private javax.swing.JTextField txtDescuento;
    private javax.swing.JTextField txtDirComprador;
    private javax.swing.JTextField txtDocumento;
    private javax.swing.JTextField txtEstablecimiento;
    private javax.swing.JTextField txtEstado;
    private javax.swing.JTextField txtFechaAutorizacion;
    private javax.swing.JTextField txtFechaEmision;
    private javax.swing.JTextField txtFirma;
    private javax.swing.JTextField txtIdComprador;
    private javax.swing.JTextField txtImporteTotal;
    private javax.swing.JTextField txtIva;
    private javax.swing.JTextField txtMatriz;
    private javax.swing.JTextField txtNombreComercial;
    private javax.swing.JTextField txtNumeroPedido;
    private javax.swing.JTextField txtPdf;
    private javax.swing.JTextField txtPorDescuento;
    private javax.swing.JTextField txtPorIva;
    private javax.swing.JTextField txtPtoEmision;
    private javax.swing.JTextField txtRazonSocial;
    private javax.swing.JTextField txtRsComprador;
    private javax.swing.JTextField txtRutaXml;
    private javax.swing.JTextField txtSecuencial;
    private javax.swing.JTextField txtSubTotal;
    private javax.swing.JTextField txtTipoIdComprador;
    private javax.swing.JTextField txtValor;
    private javax.swing.JTextField txtXmlAutorizado;
    private javax.swing.JTextField txtXsdFactura;
    private javax.swing.JTextField txtXsdGuia;
    private javax.swing.JTextField txtXsdNotaCredito;
    private javax.swing.JTextField txtXsdNotaDebito;
    private javax.swing.JTextField txtXsdRetencion;
    private javax.swing.JTextField txtclaveAcceso;
    // End of variables declaration//GEN-END:variables

}
